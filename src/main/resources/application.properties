server.port=8089

spring.application.name = sharding-jdbc-simple-demo

#server.servlet.context-path= /sharding-jdbc-simple-demo
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.force = true

spring.main.allow-bean-definition-overriding = true

mybatis.configuration.map-underscore-to-camel-case= true

#sharding-jdbc 分片规则配置
#数据源
spring.shardingsphere.datasource.names= m1

spring.shardingsphere.datasource.m1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url = jdbc:mysql://localhost:3306/order_db?useUnicod=true
spring.shardingsphere.datasource.m1.username = root
spring.shardingsphere.datasource.m1.password = admin

#指定t_order表的数据分布情况，配置数据节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes= m1.t_order_$->{1..2}

#指定t_order表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator..type=SNOWFLAKE

#指定t_order表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column= order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2 + 1}

#打开sql输出日志
spring.shardingsphere.props.sql.show = true

logging.level.root = info
logging.level.org.springframework = info
logging.level.com.itheima.dbsharding = debug
logging.level.druid.sql = debug

mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.better.producer.entity
#
#
#logging.level.root=info
#logging.level.org.springframework.web=error
##logging.path=
#logging.file=./logs/producer.log
#logging.level.com.better.producer.mapper=debug
#
##user producer
#spring.cloud.stream.bindings.my-user-message.destination=myUser
#spring.cloud.stream.bindings.my-user-message.group=my-user-message
#spring.cloud.stream.rabbit.bindings.my-user-message.producer.exchange-type=fanout